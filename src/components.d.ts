/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GwdsButton {
        "blank": boolean;
        "label": string;
        "size": 'small' | 'regular';
        "type": 'primary' | 'secondary' | 'tertiary';
        "url": string;
    }
    interface GwdsLearnMore {
        "bgColor": string;
        "bpBlank": boolean;
        "bpLabel": string;
        "bpUrl": string;
        "bsBlank": boolean;
        "bsLabel": string;
        "bsUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "pt0": boolean;
        "whiteText": boolean;
    }
    interface GwdsLookAtMe {
        "alignContent": 'left' | 'center' | 'right';
        "bgColor": string;
        "bgImage": string;
        "bgSize": string;
        "bpBlank": boolean;
        "bpLabel": string;
        "bpUrl": string;
        "bsBlank": boolean;
        "bsLabel": string;
        "bsUrl": string;
        "btBlank": boolean;
        "btLabel": string;
        "btUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "preTitle": string;
        "pt0": boolean;
        "whiteText": boolean;
    }
    interface GwdsMessage {
    }
    interface GwdsProgressBar {
    }
    interface GwdsQuote {
        "bgColor": string;
        "centerVertical": boolean;
        "cite": string;
        "imageAlt": string;
        "imageUrl": string;
        "personLocation": string;
        "personName": string;
        "whiteText": boolean;
    }
    interface GwdsShowAndTell {
        "alignContent": 'left' | 'right';
        "bgColor": string;
        "imageAlt": string;
        "imageUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "preTitle": string;
        "pt0": boolean;
        "whiteText": boolean;
    }
    interface GwdsVideo {
        "fullWidth": boolean;
        "source": 'youtube' | 'vimeo';
        "url": string;
    }
    interface GwdsVideoSection {
        "alignContent": 'left' | 'right';
        "alignTop": boolean;
        "bgColor": string;
        "fullWidth": boolean;
        "mainTitle": string;
        "pb0": boolean;
        "pt0": boolean;
        "source": 'youtube' | 'vimeo';
        "url": string;
        "whiteText": boolean;
    }
}
declare global {
    interface HTMLGwdsButtonElement extends Components.GwdsButton, HTMLStencilElement {
    }
    var HTMLGwdsButtonElement: {
        prototype: HTMLGwdsButtonElement;
        new (): HTMLGwdsButtonElement;
    };
    interface HTMLGwdsLearnMoreElement extends Components.GwdsLearnMore, HTMLStencilElement {
    }
    var HTMLGwdsLearnMoreElement: {
        prototype: HTMLGwdsLearnMoreElement;
        new (): HTMLGwdsLearnMoreElement;
    };
    interface HTMLGwdsLookAtMeElement extends Components.GwdsLookAtMe, HTMLStencilElement {
    }
    var HTMLGwdsLookAtMeElement: {
        prototype: HTMLGwdsLookAtMeElement;
        new (): HTMLGwdsLookAtMeElement;
    };
    interface HTMLGwdsMessageElement extends Components.GwdsMessage, HTMLStencilElement {
    }
    var HTMLGwdsMessageElement: {
        prototype: HTMLGwdsMessageElement;
        new (): HTMLGwdsMessageElement;
    };
    interface HTMLGwdsProgressBarElement extends Components.GwdsProgressBar, HTMLStencilElement {
    }
    var HTMLGwdsProgressBarElement: {
        prototype: HTMLGwdsProgressBarElement;
        new (): HTMLGwdsProgressBarElement;
    };
    interface HTMLGwdsQuoteElement extends Components.GwdsQuote, HTMLStencilElement {
    }
    var HTMLGwdsQuoteElement: {
        prototype: HTMLGwdsQuoteElement;
        new (): HTMLGwdsQuoteElement;
    };
    interface HTMLGwdsShowAndTellElement extends Components.GwdsShowAndTell, HTMLStencilElement {
    }
    var HTMLGwdsShowAndTellElement: {
        prototype: HTMLGwdsShowAndTellElement;
        new (): HTMLGwdsShowAndTellElement;
    };
    interface HTMLGwdsVideoElement extends Components.GwdsVideo, HTMLStencilElement {
    }
    var HTMLGwdsVideoElement: {
        prototype: HTMLGwdsVideoElement;
        new (): HTMLGwdsVideoElement;
    };
    interface HTMLGwdsVideoSectionElement extends Components.GwdsVideoSection, HTMLStencilElement {
    }
    var HTMLGwdsVideoSectionElement: {
        prototype: HTMLGwdsVideoSectionElement;
        new (): HTMLGwdsVideoSectionElement;
    };
    interface HTMLElementTagNameMap {
        "gwds-button": HTMLGwdsButtonElement;
        "gwds-learn-more": HTMLGwdsLearnMoreElement;
        "gwds-look-at-me": HTMLGwdsLookAtMeElement;
        "gwds-message": HTMLGwdsMessageElement;
        "gwds-progress-bar": HTMLGwdsProgressBarElement;
        "gwds-quote": HTMLGwdsQuoteElement;
        "gwds-show-and-tell": HTMLGwdsShowAndTellElement;
        "gwds-video": HTMLGwdsVideoElement;
        "gwds-video-section": HTMLGwdsVideoSectionElement;
    }
}
declare namespace LocalJSX {
    interface GwdsButton {
        "blank"?: boolean;
        "label"?: string;
        "size"?: 'small' | 'regular';
        "type"?: 'primary' | 'secondary' | 'tertiary';
        "url"?: string;
    }
    interface GwdsLearnMore {
        "bgColor"?: string;
        "bpBlank"?: boolean;
        "bpLabel"?: string;
        "bpUrl"?: string;
        "bsBlank"?: boolean;
        "bsLabel"?: string;
        "bsUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "pt0"?: boolean;
        "whiteText"?: boolean;
    }
    interface GwdsLookAtMe {
        "alignContent"?: 'left' | 'center' | 'right';
        "bgColor"?: string;
        "bgImage"?: string;
        "bgSize"?: string;
        "bpBlank"?: boolean;
        "bpLabel"?: string;
        "bpUrl"?: string;
        "bsBlank"?: boolean;
        "bsLabel"?: string;
        "bsUrl"?: string;
        "btBlank"?: boolean;
        "btLabel"?: string;
        "btUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "preTitle"?: string;
        "pt0"?: boolean;
        "whiteText"?: boolean;
    }
    interface GwdsMessage {
    }
    interface GwdsProgressBar {
    }
    interface GwdsQuote {
        "bgColor"?: string;
        "centerVertical"?: boolean;
        "cite"?: string;
        "imageAlt"?: string;
        "imageUrl"?: string;
        "personLocation"?: string;
        "personName"?: string;
        "whiteText"?: boolean;
    }
    interface GwdsShowAndTell {
        "alignContent"?: 'left' | 'right';
        "bgColor"?: string;
        "imageAlt"?: string;
        "imageUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "preTitle"?: string;
        "pt0"?: boolean;
        "whiteText"?: boolean;
    }
    interface GwdsVideo {
        "fullWidth"?: boolean;
        "source"?: 'youtube' | 'vimeo';
        "url"?: string;
    }
    interface GwdsVideoSection {
        "alignContent"?: 'left' | 'right';
        "alignTop"?: boolean;
        "bgColor"?: string;
        "fullWidth"?: boolean;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "pt0"?: boolean;
        "source"?: 'youtube' | 'vimeo';
        "url"?: string;
        "whiteText"?: boolean;
    }
    interface IntrinsicElements {
        "gwds-button": GwdsButton;
        "gwds-learn-more": GwdsLearnMore;
        "gwds-look-at-me": GwdsLookAtMe;
        "gwds-message": GwdsMessage;
        "gwds-progress-bar": GwdsProgressBar;
        "gwds-quote": GwdsQuote;
        "gwds-show-and-tell": GwdsShowAndTell;
        "gwds-video": GwdsVideo;
        "gwds-video-section": GwdsVideoSection;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gwds-button": LocalJSX.GwdsButton & JSXBase.HTMLAttributes<HTMLGwdsButtonElement>;
            "gwds-learn-more": LocalJSX.GwdsLearnMore & JSXBase.HTMLAttributes<HTMLGwdsLearnMoreElement>;
            "gwds-look-at-me": LocalJSX.GwdsLookAtMe & JSXBase.HTMLAttributes<HTMLGwdsLookAtMeElement>;
            "gwds-message": LocalJSX.GwdsMessage & JSXBase.HTMLAttributes<HTMLGwdsMessageElement>;
            "gwds-progress-bar": LocalJSX.GwdsProgressBar & JSXBase.HTMLAttributes<HTMLGwdsProgressBarElement>;
            "gwds-quote": LocalJSX.GwdsQuote & JSXBase.HTMLAttributes<HTMLGwdsQuoteElement>;
            "gwds-show-and-tell": LocalJSX.GwdsShowAndTell & JSXBase.HTMLAttributes<HTMLGwdsShowAndTellElement>;
            "gwds-video": LocalJSX.GwdsVideo & JSXBase.HTMLAttributes<HTMLGwdsVideoElement>;
            "gwds-video-section": LocalJSX.GwdsVideoSection & JSXBase.HTMLAttributes<HTMLGwdsVideoSectionElement>;
        }
    }
}

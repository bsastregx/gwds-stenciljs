/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GwdsAccordion {
    }
    interface GwdsAccordionItem {
        "active": boolean;
        "itemId": string;
        "itemTitle": string;
    }
    interface GwdsAccordionSection {
        "bgColor": string;
        "mainTitle": string;
        "pb0": boolean;
        "pt0": boolean;
    }
    interface GwdsBlocks {
        "bgColor": string;
        "buttonLabel": string;
        "buttonUrl": string;
        "description": string;
        "display": 'grid-2' | 'grid-3' | 'grid-aside';
        "linkLabel": string;
        "linkTarget": '_blank' | '_self';
        "linkUrl": string;
        "mainTitle": string;
    }
    interface GwdsButton {
        "blank": boolean;
        "label": string;
        "m0": boolean;
        "size": 'small' | 'regular';
        "type": 'primary' | 'secondary' | 'tertiary';
        "url": string;
    }
    interface GwdsCard {
        "bgColor": string;
        "imgAlt": string;
        "imgSrc": string;
        "linkLabel": string;
        "linkTarget": string;
        "linkUrl": string;
        "noShadow": boolean;
        "tagLabel": string;
        "titleLabel": string;
    }
    interface GwdsComponentTitle {
        "experimental": boolean;
    }
    interface GwdsGradientTitle {
        "center": boolean;
        "from": string;
        "to": string;
    }
    interface GwdsGrid {
        "perRow": '2' | '3' | '4' | '6';
    }
    interface GwdsLearnMore {
        "bgColor": string;
        "bpBlank": boolean;
        "bpLabel": string;
        "bpUrl": string;
        "bsBlank": boolean;
        "bsLabel": string;
        "bsUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "pt0": boolean;
    }
    interface GwdsLogo {
        "imgAlt": string;
        "imgSrc": string;
        "label": string;
        "linkUrl": string;
        "name": string;
        "size": string;
    }
    interface GwdsLogos {
        "mainTitle": string;
    }
    interface GwdsLookAtMe {
        "alignContent": 'left' | 'center' | 'right';
        "bgColor": string;
        "bgImage": string;
        "bgSize": string;
        "bpBlank": boolean;
        "bpLabel": string;
        "bpUrl": string;
        "bsBlank": boolean;
        "bsLabel": string;
        "bsUrl": string;
        "btBlank": boolean;
        "btLabel": string;
        "btUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "preTitle": string;
        "pt0": boolean;
    }
    interface GwdsMessage {
    }
    interface GwdsProgressBar {
    }
    interface GwdsQuote {
        "bgColor": string;
        "centerVertical": boolean;
        "cite": string;
        "imageAlt": string;
        "imageUrl": string;
        "personLocation": string;
        "personName": string;
        "whiteText": boolean;
    }
    interface GwdsShowAndTell {
        "alignContent": 'left' | 'right';
        "bgColor": string;
        "imageAlt": string;
        "imageUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "preTitle": string;
        "pt0": boolean;
    }
    interface GwdsSlider {
        "cards": boolean;
        "cover": boolean;
        "gap": boolean;
        "orientation": 'landscape' | 'portrait';
        "padding": boolean;
        "slideId": string;
    }
    interface GwdsTag {
        "bgColor": 'violet-50';
        "label": string;
    }
    interface GwdsVideo {
        "fullWidth": boolean;
        "source": 'youtube' | 'vimeo';
        "url": string;
    }
    interface GwdsVideoSection {
        "alignContent": 'left' | 'right';
        "alignTop": boolean;
        "bgColor": string;
        "fullWidth": boolean;
        "mainTitle": string;
        "pb0": boolean;
        "pt0": boolean;
        "source": 'youtube' | 'vimeo';
        "url": string;
    }
}
export interface GwdsAccordionItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLGwdsAccordionItemElement;
}
declare global {
    interface HTMLGwdsAccordionElement extends Components.GwdsAccordion, HTMLStencilElement {
    }
    var HTMLGwdsAccordionElement: {
        prototype: HTMLGwdsAccordionElement;
        new (): HTMLGwdsAccordionElement;
    };
    interface HTMLGwdsAccordionItemElement extends Components.GwdsAccordionItem, HTMLStencilElement {
    }
    var HTMLGwdsAccordionItemElement: {
        prototype: HTMLGwdsAccordionItemElement;
        new (): HTMLGwdsAccordionItemElement;
    };
    interface HTMLGwdsAccordionSectionElement extends Components.GwdsAccordionSection, HTMLStencilElement {
    }
    var HTMLGwdsAccordionSectionElement: {
        prototype: HTMLGwdsAccordionSectionElement;
        new (): HTMLGwdsAccordionSectionElement;
    };
    interface HTMLGwdsBlocksElement extends Components.GwdsBlocks, HTMLStencilElement {
    }
    var HTMLGwdsBlocksElement: {
        prototype: HTMLGwdsBlocksElement;
        new (): HTMLGwdsBlocksElement;
    };
    interface HTMLGwdsButtonElement extends Components.GwdsButton, HTMLStencilElement {
    }
    var HTMLGwdsButtonElement: {
        prototype: HTMLGwdsButtonElement;
        new (): HTMLGwdsButtonElement;
    };
    interface HTMLGwdsCardElement extends Components.GwdsCard, HTMLStencilElement {
    }
    var HTMLGwdsCardElement: {
        prototype: HTMLGwdsCardElement;
        new (): HTMLGwdsCardElement;
    };
    interface HTMLGwdsComponentTitleElement extends Components.GwdsComponentTitle, HTMLStencilElement {
    }
    var HTMLGwdsComponentTitleElement: {
        prototype: HTMLGwdsComponentTitleElement;
        new (): HTMLGwdsComponentTitleElement;
    };
    interface HTMLGwdsGradientTitleElement extends Components.GwdsGradientTitle, HTMLStencilElement {
    }
    var HTMLGwdsGradientTitleElement: {
        prototype: HTMLGwdsGradientTitleElement;
        new (): HTMLGwdsGradientTitleElement;
    };
    interface HTMLGwdsGridElement extends Components.GwdsGrid, HTMLStencilElement {
    }
    var HTMLGwdsGridElement: {
        prototype: HTMLGwdsGridElement;
        new (): HTMLGwdsGridElement;
    };
    interface HTMLGwdsLearnMoreElement extends Components.GwdsLearnMore, HTMLStencilElement {
    }
    var HTMLGwdsLearnMoreElement: {
        prototype: HTMLGwdsLearnMoreElement;
        new (): HTMLGwdsLearnMoreElement;
    };
    interface HTMLGwdsLogoElement extends Components.GwdsLogo, HTMLStencilElement {
    }
    var HTMLGwdsLogoElement: {
        prototype: HTMLGwdsLogoElement;
        new (): HTMLGwdsLogoElement;
    };
    interface HTMLGwdsLogosElement extends Components.GwdsLogos, HTMLStencilElement {
    }
    var HTMLGwdsLogosElement: {
        prototype: HTMLGwdsLogosElement;
        new (): HTMLGwdsLogosElement;
    };
    interface HTMLGwdsLookAtMeElement extends Components.GwdsLookAtMe, HTMLStencilElement {
    }
    var HTMLGwdsLookAtMeElement: {
        prototype: HTMLGwdsLookAtMeElement;
        new (): HTMLGwdsLookAtMeElement;
    };
    interface HTMLGwdsMessageElement extends Components.GwdsMessage, HTMLStencilElement {
    }
    var HTMLGwdsMessageElement: {
        prototype: HTMLGwdsMessageElement;
        new (): HTMLGwdsMessageElement;
    };
    interface HTMLGwdsProgressBarElement extends Components.GwdsProgressBar, HTMLStencilElement {
    }
    var HTMLGwdsProgressBarElement: {
        prototype: HTMLGwdsProgressBarElement;
        new (): HTMLGwdsProgressBarElement;
    };
    interface HTMLGwdsQuoteElement extends Components.GwdsQuote, HTMLStencilElement {
    }
    var HTMLGwdsQuoteElement: {
        prototype: HTMLGwdsQuoteElement;
        new (): HTMLGwdsQuoteElement;
    };
    interface HTMLGwdsShowAndTellElement extends Components.GwdsShowAndTell, HTMLStencilElement {
    }
    var HTMLGwdsShowAndTellElement: {
        prototype: HTMLGwdsShowAndTellElement;
        new (): HTMLGwdsShowAndTellElement;
    };
    interface HTMLGwdsSliderElement extends Components.GwdsSlider, HTMLStencilElement {
    }
    var HTMLGwdsSliderElement: {
        prototype: HTMLGwdsSliderElement;
        new (): HTMLGwdsSliderElement;
    };
    interface HTMLGwdsTagElement extends Components.GwdsTag, HTMLStencilElement {
    }
    var HTMLGwdsTagElement: {
        prototype: HTMLGwdsTagElement;
        new (): HTMLGwdsTagElement;
    };
    interface HTMLGwdsVideoElement extends Components.GwdsVideo, HTMLStencilElement {
    }
    var HTMLGwdsVideoElement: {
        prototype: HTMLGwdsVideoElement;
        new (): HTMLGwdsVideoElement;
    };
    interface HTMLGwdsVideoSectionElement extends Components.GwdsVideoSection, HTMLStencilElement {
    }
    var HTMLGwdsVideoSectionElement: {
        prototype: HTMLGwdsVideoSectionElement;
        new (): HTMLGwdsVideoSectionElement;
    };
    interface HTMLElementTagNameMap {
        "gwds-accordion": HTMLGwdsAccordionElement;
        "gwds-accordion-item": HTMLGwdsAccordionItemElement;
        "gwds-accordion-section": HTMLGwdsAccordionSectionElement;
        "gwds-blocks": HTMLGwdsBlocksElement;
        "gwds-button": HTMLGwdsButtonElement;
        "gwds-card": HTMLGwdsCardElement;
        "gwds-component-title": HTMLGwdsComponentTitleElement;
        "gwds-gradient-title": HTMLGwdsGradientTitleElement;
        "gwds-grid": HTMLGwdsGridElement;
        "gwds-learn-more": HTMLGwdsLearnMoreElement;
        "gwds-logo": HTMLGwdsLogoElement;
        "gwds-logos": HTMLGwdsLogosElement;
        "gwds-look-at-me": HTMLGwdsLookAtMeElement;
        "gwds-message": HTMLGwdsMessageElement;
        "gwds-progress-bar": HTMLGwdsProgressBarElement;
        "gwds-quote": HTMLGwdsQuoteElement;
        "gwds-show-and-tell": HTMLGwdsShowAndTellElement;
        "gwds-slider": HTMLGwdsSliderElement;
        "gwds-tag": HTMLGwdsTagElement;
        "gwds-video": HTMLGwdsVideoElement;
        "gwds-video-section": HTMLGwdsVideoSectionElement;
    }
}
declare namespace LocalJSX {
    interface GwdsAccordion {
    }
    interface GwdsAccordionItem {
        "active"?: boolean;
        "itemId"?: string;
        "itemTitle"?: string;
        "onAccordionOpened"?: (event: GwdsAccordionItemCustomEvent<object>) => void;
    }
    interface GwdsAccordionSection {
        "bgColor"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "pt0"?: boolean;
    }
    interface GwdsBlocks {
        "bgColor"?: string;
        "buttonLabel"?: string;
        "buttonUrl"?: string;
        "description"?: string;
        "display"?: 'grid-2' | 'grid-3' | 'grid-aside';
        "linkLabel"?: string;
        "linkTarget"?: '_blank' | '_self';
        "linkUrl"?: string;
        "mainTitle"?: string;
    }
    interface GwdsButton {
        "blank"?: boolean;
        "label"?: string;
        "m0"?: boolean;
        "size"?: 'small' | 'regular';
        "type"?: 'primary' | 'secondary' | 'tertiary';
        "url"?: string;
    }
    interface GwdsCard {
        "bgColor"?: string;
        "imgAlt"?: string;
        "imgSrc"?: string;
        "linkLabel"?: string;
        "linkTarget"?: string;
        "linkUrl"?: string;
        "noShadow"?: boolean;
        "tagLabel"?: string;
        "titleLabel"?: string;
    }
    interface GwdsComponentTitle {
        "experimental"?: boolean;
    }
    interface GwdsGradientTitle {
        "center"?: boolean;
        "from"?: string;
        "to"?: string;
    }
    interface GwdsGrid {
        "perRow"?: '2' | '3' | '4' | '6';
    }
    interface GwdsLearnMore {
        "bgColor"?: string;
        "bpBlank"?: boolean;
        "bpLabel"?: string;
        "bpUrl"?: string;
        "bsBlank"?: boolean;
        "bsLabel"?: string;
        "bsUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "pt0"?: boolean;
    }
    interface GwdsLogo {
        "imgAlt"?: string;
        "imgSrc"?: string;
        "label"?: string;
        "linkUrl"?: string;
        "name"?: string;
        "size"?: string;
    }
    interface GwdsLogos {
        "mainTitle"?: string;
    }
    interface GwdsLookAtMe {
        "alignContent"?: 'left' | 'center' | 'right';
        "bgColor"?: string;
        "bgImage"?: string;
        "bgSize"?: string;
        "bpBlank"?: boolean;
        "bpLabel"?: string;
        "bpUrl"?: string;
        "bsBlank"?: boolean;
        "bsLabel"?: string;
        "bsUrl"?: string;
        "btBlank"?: boolean;
        "btLabel"?: string;
        "btUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "preTitle"?: string;
        "pt0"?: boolean;
    }
    interface GwdsMessage {
    }
    interface GwdsProgressBar {
    }
    interface GwdsQuote {
        "bgColor"?: string;
        "centerVertical"?: boolean;
        "cite"?: string;
        "imageAlt"?: string;
        "imageUrl"?: string;
        "personLocation"?: string;
        "personName"?: string;
        "whiteText"?: boolean;
    }
    interface GwdsShowAndTell {
        "alignContent"?: 'left' | 'right';
        "bgColor"?: string;
        "imageAlt"?: string;
        "imageUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "preTitle"?: string;
        "pt0"?: boolean;
    }
    interface GwdsSlider {
        "cards"?: boolean;
        "cover"?: boolean;
        "gap"?: boolean;
        "orientation"?: 'landscape' | 'portrait';
        "padding"?: boolean;
        "slideId"?: string;
    }
    interface GwdsTag {
        "bgColor"?: 'violet-50';
        "label"?: string;
    }
    interface GwdsVideo {
        "fullWidth"?: boolean;
        "source"?: 'youtube' | 'vimeo';
        "url"?: string;
    }
    interface GwdsVideoSection {
        "alignContent"?: 'left' | 'right';
        "alignTop"?: boolean;
        "bgColor"?: string;
        "fullWidth"?: boolean;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "pt0"?: boolean;
        "source"?: 'youtube' | 'vimeo';
        "url"?: string;
    }
    interface IntrinsicElements {
        "gwds-accordion": GwdsAccordion;
        "gwds-accordion-item": GwdsAccordionItem;
        "gwds-accordion-section": GwdsAccordionSection;
        "gwds-blocks": GwdsBlocks;
        "gwds-button": GwdsButton;
        "gwds-card": GwdsCard;
        "gwds-component-title": GwdsComponentTitle;
        "gwds-gradient-title": GwdsGradientTitle;
        "gwds-grid": GwdsGrid;
        "gwds-learn-more": GwdsLearnMore;
        "gwds-logo": GwdsLogo;
        "gwds-logos": GwdsLogos;
        "gwds-look-at-me": GwdsLookAtMe;
        "gwds-message": GwdsMessage;
        "gwds-progress-bar": GwdsProgressBar;
        "gwds-quote": GwdsQuote;
        "gwds-show-and-tell": GwdsShowAndTell;
        "gwds-slider": GwdsSlider;
        "gwds-tag": GwdsTag;
        "gwds-video": GwdsVideo;
        "gwds-video-section": GwdsVideoSection;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gwds-accordion": LocalJSX.GwdsAccordion & JSXBase.HTMLAttributes<HTMLGwdsAccordionElement>;
            "gwds-accordion-item": LocalJSX.GwdsAccordionItem & JSXBase.HTMLAttributes<HTMLGwdsAccordionItemElement>;
            "gwds-accordion-section": LocalJSX.GwdsAccordionSection & JSXBase.HTMLAttributes<HTMLGwdsAccordionSectionElement>;
            "gwds-blocks": LocalJSX.GwdsBlocks & JSXBase.HTMLAttributes<HTMLGwdsBlocksElement>;
            "gwds-button": LocalJSX.GwdsButton & JSXBase.HTMLAttributes<HTMLGwdsButtonElement>;
            "gwds-card": LocalJSX.GwdsCard & JSXBase.HTMLAttributes<HTMLGwdsCardElement>;
            "gwds-component-title": LocalJSX.GwdsComponentTitle & JSXBase.HTMLAttributes<HTMLGwdsComponentTitleElement>;
            "gwds-gradient-title": LocalJSX.GwdsGradientTitle & JSXBase.HTMLAttributes<HTMLGwdsGradientTitleElement>;
            "gwds-grid": LocalJSX.GwdsGrid & JSXBase.HTMLAttributes<HTMLGwdsGridElement>;
            "gwds-learn-more": LocalJSX.GwdsLearnMore & JSXBase.HTMLAttributes<HTMLGwdsLearnMoreElement>;
            "gwds-logo": LocalJSX.GwdsLogo & JSXBase.HTMLAttributes<HTMLGwdsLogoElement>;
            "gwds-logos": LocalJSX.GwdsLogos & JSXBase.HTMLAttributes<HTMLGwdsLogosElement>;
            "gwds-look-at-me": LocalJSX.GwdsLookAtMe & JSXBase.HTMLAttributes<HTMLGwdsLookAtMeElement>;
            "gwds-message": LocalJSX.GwdsMessage & JSXBase.HTMLAttributes<HTMLGwdsMessageElement>;
            "gwds-progress-bar": LocalJSX.GwdsProgressBar & JSXBase.HTMLAttributes<HTMLGwdsProgressBarElement>;
            "gwds-quote": LocalJSX.GwdsQuote & JSXBase.HTMLAttributes<HTMLGwdsQuoteElement>;
            "gwds-show-and-tell": LocalJSX.GwdsShowAndTell & JSXBase.HTMLAttributes<HTMLGwdsShowAndTellElement>;
            "gwds-slider": LocalJSX.GwdsSlider & JSXBase.HTMLAttributes<HTMLGwdsSliderElement>;
            "gwds-tag": LocalJSX.GwdsTag & JSXBase.HTMLAttributes<HTMLGwdsTagElement>;
            "gwds-video": LocalJSX.GwdsVideo & JSXBase.HTMLAttributes<HTMLGwdsVideoElement>;
            "gwds-video-section": LocalJSX.GwdsVideoSection & JSXBase.HTMLAttributes<HTMLGwdsVideoSectionElement>;
        }
    }
}

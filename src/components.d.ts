/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GwButton {
        "blank": boolean;
        "label": string;
        "size": 'small' | 'regular';
        "type": 'primary' | 'secondary' | 'tertiary';
        "url": string;
    }
    interface GwLookAtMe {
        "alignContent": 'left' | 'center' | 'right';
        "bgColor": string;
        "bgImage": string;
        "bgImageFour": string;
        "bgImageOne": string;
        "bgImageThree": string;
        "bgImageTwo": string;
        "bgSize": string;
        "mainTitle": string;
        "pB0": boolean;
        "pT0": boolean;
        "preTitle": string;
        "test": string;
        "whiteText": boolean;
    }
    interface GwShowAndTell {
        "alignContent": 'left' | 'right';
        "bgColor": string;
        "imageAlt": string;
        "imageUrl": string;
        "mainTitle": string;
        "pb0": boolean;
        "preTitle": string;
        "pt0": boolean;
        "whiteText": boolean;
    }
    interface GwTest {
        "bgColor": string;
        "theTitle": string;
    }
    interface GwTitle {
        "light": boolean;
        "looks": string;
        "mt0": boolean;
        "type": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLGwButtonElement extends Components.GwButton, HTMLStencilElement {
    }
    var HTMLGwButtonElement: {
        prototype: HTMLGwButtonElement;
        new (): HTMLGwButtonElement;
    };
    interface HTMLGwLookAtMeElement extends Components.GwLookAtMe, HTMLStencilElement {
    }
    var HTMLGwLookAtMeElement: {
        prototype: HTMLGwLookAtMeElement;
        new (): HTMLGwLookAtMeElement;
    };
    interface HTMLGwShowAndTellElement extends Components.GwShowAndTell, HTMLStencilElement {
    }
    var HTMLGwShowAndTellElement: {
        prototype: HTMLGwShowAndTellElement;
        new (): HTMLGwShowAndTellElement;
    };
    interface HTMLGwTestElement extends Components.GwTest, HTMLStencilElement {
    }
    var HTMLGwTestElement: {
        prototype: HTMLGwTestElement;
        new (): HTMLGwTestElement;
    };
    interface HTMLGwTitleElement extends Components.GwTitle, HTMLStencilElement {
    }
    var HTMLGwTitleElement: {
        prototype: HTMLGwTitleElement;
        new (): HTMLGwTitleElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "gw-button": HTMLGwButtonElement;
        "gw-look-at-me": HTMLGwLookAtMeElement;
        "gw-show-and-tell": HTMLGwShowAndTellElement;
        "gw-test": HTMLGwTestElement;
        "gw-title": HTMLGwTitleElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface GwButton {
        "blank"?: boolean;
        "label"?: string;
        "size"?: 'small' | 'regular';
        "type"?: 'primary' | 'secondary' | 'tertiary';
        "url"?: string;
    }
    interface GwLookAtMe {
        "alignContent"?: 'left' | 'center' | 'right';
        "bgColor"?: string;
        "bgImage"?: string;
        "bgImageFour"?: string;
        "bgImageOne"?: string;
        "bgImageThree"?: string;
        "bgImageTwo"?: string;
        "bgSize"?: string;
        "mainTitle"?: string;
        "pB0"?: boolean;
        "pT0"?: boolean;
        "preTitle"?: string;
        "test"?: string;
        "whiteText"?: boolean;
    }
    interface GwShowAndTell {
        "alignContent"?: 'left' | 'right';
        "bgColor"?: string;
        "imageAlt"?: string;
        "imageUrl"?: string;
        "mainTitle"?: string;
        "pb0"?: boolean;
        "preTitle"?: string;
        "pt0"?: boolean;
        "whiteText"?: boolean;
    }
    interface GwTest {
        "bgColor"?: string;
        "theTitle"?: string;
    }
    interface GwTitle {
        "light"?: boolean;
        "looks"?: string;
        "mt0"?: boolean;
        "type"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "gw-button": GwButton;
        "gw-look-at-me": GwLookAtMe;
        "gw-show-and-tell": GwShowAndTell;
        "gw-test": GwTest;
        "gw-title": GwTitle;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gw-button": LocalJSX.GwButton & JSXBase.HTMLAttributes<HTMLGwButtonElement>;
            "gw-look-at-me": LocalJSX.GwLookAtMe & JSXBase.HTMLAttributes<HTMLGwLookAtMeElement>;
            "gw-show-and-tell": LocalJSX.GwShowAndTell & JSXBase.HTMLAttributes<HTMLGwShowAndTellElement>;
            "gw-test": LocalJSX.GwTest & JSXBase.HTMLAttributes<HTMLGwTestElement>;
            "gw-title": LocalJSX.GwTitle & JSXBase.HTMLAttributes<HTMLGwTitleElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
